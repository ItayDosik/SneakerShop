@model SneakerShop.ViewModels.LoginVM 

@{
    ViewData["Title"] = "Login";
} 

<style>
    .invalidInput ul {
        list-style: none;
        list-style-type: none;
        padding-left: 0; 
        color: red;
    }
</style>

<div class="row d-flex align-items-center justify-content-center">
    <div class="col-md-3 card p-3"> 
        <h2 class="text-center text-info">Login</h2>
        <form asp-action="Login" method="post">
            <div class="mb-1">
                <label asp-for="UserName"></label>
                <input asp-for="UserName" class="form-control"/> 
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>

            <div class="mb-1">
                <label asp-for="Password"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div> 

            <br/>

            <div class="mb-1 form-check-check">
                <label class="form-check-label"></label>
                <input asp-for="RememberMe" class="form-check-input"/>@Html.DisplayNameFor(a=>a.RememberMe)
            </div>

            <div asp-validation-summary="ModelOnly" class="invalidInput"></div>


            <div class="row">
                <div class="col-8">
                    <a class="text-decoration-none float-start mt-2" asp-action="Register">Don't have and account?</a>
                </div>

                <div class="col-4">
                    <input type="submit" value="Login" class="btn btn-primary btn-sm float-end"/>
                </div>
            </div>
        </form>
    </div>
</div>


@section Scripts{ 
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");

    }
}