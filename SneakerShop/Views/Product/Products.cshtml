@model List<SneakerShop.Models.Product>
﻿@using Microsoft.AspNetCore.Identity;
@inject SignInManager<Users> signInManager;

<style>
    .carousel-control-prev,
    .carousel-control-next {
       height: 50%;
       margin-top: auto;
       margin-bottom: auto;
    }
    .text-sale{ 
        color:red;
    }

    .my-badge{ 
        width:5rem;
        margin-left:80%; 
    }


</style>

<body>
    <!--Search Bar-->
    <div class="container w-50 my-5">
        <form asp-controller="Product" asp-action="Search" method="get">
            <div class="input-group mb-3">
                <input type="text" class="form-control" name="search" placeholder="Search sneakers">
                <button class="btn btn-outline-secondary" type="submit">Search</button>
                <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">Sort By</button>
                <ul class="dropdown-menu">
                    <li><a href="@Url.Action("Sort", "Product", new { sort = "Price Increase" })" class="dropdown-item">Price (High to low)</a></li>
                    <li><a href="@Url.Action("Sort", "Product", new { sort = "Price Decrease" })" class="dropdown-item">Price (Low to high)</a></li>
                    <li><a href="@Url.Action("Sort", "Product", new { sort = "Category" })" class="dropdown-item">Category</a></li>
                    <li><a href="@Url.Action("Sort", "Product", new { sort = "Most Popular" })" class="dropdown-item">Most Popular</a></li>
                    <li><hr class="dropdown-divider"></li>
                    <li><a href="@Url.Action("Sort", "Product", new { sort = "Remove filter" })" class="dropdown-item">Default</a></li>
                </ul>
            </div>
        </form>

       

        <div>
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show w-50 mx-auto" role="alert">
                    <button type="button" class="btn btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    @TempData["ErrorMessage"]
                </div>
            }

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show w-50 mx-auto" role="alert">
                    <button type="button" class="btn btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    @TempData["SuccessMessage"]
                </div>
            }

        </div>
    </div>


    <!--EOF Search Bar-->



        <div class="row">
            <div class="col-sm-12 col-md-2 order-sm-1">
                <div class="container">

                    <div class="accordion mb-5" id="accordionPanelsStayOpenExample">
                        <div class="accordion-item">
                            <h2 class="accordion-header">
                                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapseOne" aria-expanded="true" aria-controls="panelsStayOpen-collapseOne">
                                    Filter Options
                                </button>
                            </h2>
                            <div id="panelsStayOpen-collapseOne" class="accordion-collapse collapse show">
                                <div class="accordion-body">

                                <!--Categories-->
                                <form class="mb-4" asp-controller="Product" asp-action="CategoryFilter" method="get">
                                    <label class="form-label">Categories</label>
                                    <div class="input-group mb-3">
                                        
                                        <select class="form-select" name="category" title="Department List">
                                            <option selected value="Show">Show All</option>
                                            <option value="Yeezy">Yeezy</option>
                                            <option value="NikeSB">NikeSB</option>
                                            <option value="Adidas">Adidas</option>
                                            <option value="Jordan">Jordan</option>
                                        </select>
                                        <button class="btn btn-outline-primary" type="submit">Show</button>
                                    </div>
                                </form>
                                <!--EOF Categories-->

                                <!--Price Range-->
                                <form class="mb-4" id="priceRangeForm" asp-controller="Product" asp-action="SearchByPrice" method="get">
                                    <div class="input-group mb-3">
                                        <label for="customRange3" class="form-label">Price Range</label>
                                        <input type="range" class="form-range" min="1" max="10000" step="100" id="customRange3">
                                        <div id="selectedAmount">Price range: 1$ - $ </div>
                                    </div>
                                    <input type="hidden" name="search" id="selectedAmountInput">
                                    <button class="btn btn-outline-primary" type="submit">Apply</button>
                                </form>
                                <!--EOF Price Range-->

                                    <div class="btn-group">
                                    <a href="@Url.Action("Sort", "Product", new { sort = "Sale" })" class="btn btn-outline-primary">Show Items on Sale</a>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                    
                </div>


            </div>
            <div class="col-sm-12 col-md-9 order-sm-2">
                <div class="row mx-3">
                    @for (int i = 0; i < Model.Count(); i++)
                    {
                        <div class="col-md-4 col-12 mb-4">
                            <div class="card">
                                @if (@Model[i].IsOnSale)
                                {
                                    <div class="card-img-overlay" style="position: absolute; top: 0; right: 0; z-index: 1;">
                                        <span class="badge alert-danger my-badge">-@Model[i].SalePercentage% OFF</span>
                                    </div>



                                }
                                @if (signInManager.IsSignedIn(User))
                                {
                                    @if (@User.IsInRole("Admin"))
                                    {
                                        <div class="card-img-overlay" style="position: absolute; top: 0; right: 0; z-index: 1;">


                                            <button type="button" class="btn" data-bs-toggle="dropdown" aria-expanded="false">
                                                <span style="font-size: 20px; color: #dbe1e8;">
                                                    <i class="fa-solid fa-pen-to-square"></i>
                                                </span>
                                            </button>
                                            <ul class="dropdown-menu">
                                                <li><a href="@Url.Action("Edit","Product", new {@id = @Model[i].ProductId})" class="dropdown-item">Edit</a></li>
                                                <li><hr class="dropdown-divider"></li>
                                                <li><a class="dropdown-item" href="#" onclick="return confirmDelete('@Url.Action("Delete", "Product", new { @id = @Model[i].ProductId })')">Remove Sneaker</a></li>
                                            </ul>
                                        </div>

                                    }
                                }

                                <div id="myCarousel_@i" class="carousel slide mb-6" data-bs-interval="false">
                                    <div class="carousel-inner">
                                        <div class="carousel-item active">
                                            <img class="w-100" src=@Model[i].ProductPictureURL1 alt="image">
                                        </div>
                                        <div class="carousel-item">
                                            <img class="w-100" src=@Model[i].ProductPictureURL2 alt="image">
                                        </div>
                                        <div class="carousel-item">
                                            <img class="w-100" src=@Model[i].ProductPictureURL3 alt="image">
                                        </div>
                                    </div>
                                    <div class="carousel-control-container">
                                        <button class="carousel-control-prev" type="button" data-bs-target="#myCarousel_@i" data-bs-slide="prev">
                                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                            <span class="visually-hidden">Previous</span>
                                        </button>
                                        <button class="carousel-control-next" type="button" data-bs-target="#myCarousel_@i" data-bs-slide="next">
                                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                            <span class="visually-hidden">Next</span>
                                        </button>
                                    </div>
                                </div>


                                <div class="card-body">

                                    @if (@Model[i].IsOnSale)
                                    {
                                        <div class=" top-0 end-0">
                                        </div>
                                        <div class="row">
                                            <h5 class="col card-title">@Model[i].ProductName  </h5>

                                        </div>
                                        <p class="card-text">
                                            @Model[i].ProductDescription
                                        </p>


                                        decimal salePrice = Model[i].Price * (1 - ((decimal)Model[i].SalePercentage / 100));
                                        salePrice = Math.Round(salePrice, 2);

                                        <p class="fw-semibold text-secondary" style="text-decoration: line-through;">Regular Price: $@Model[i].Price</p>
                                        <p class="fw-semibold text-sale">Sale Price: $@salePrice</p>
                                    }
                                    else
                                    {
                                        <h5 class="card-title">@Model[i].ProductName</h5>
                                        <p class="card-text">
                                            @Model[i].ProductDescription
                                        </p>
                                        <p class="fw-semibold text-secondary">$@Model[i].Price</p>
                                    }

                                    <form action="@Url.Action("AddToCart", "Cart", new { productID = @Model[i].ProductId })" method="post">
                                        <div class="input-group mb-1 w-75 ms-5 d-flex" style="z-index: 2;">
                                            <select class="form-select" name="quantity" onchange="checkOption(event)" id="selectNum_@i">
                                                <option selected disabled>Select quantity</option>
                                                <option value="1">1</option>
                                                <option value="2">2</option>
                                                <option value="3">3</option>
                                                <option value="4">4</option>
                                                <option value="5">5</option>
                                            </select>
                                            <button class="btn btn-outline-primary" id="btn_@i" type="submit" disabled>Add to cart</button>
                                        </div>
                                    </form>

                                </div>
                            </div>
                        </div>
                    }
                </div>
        </div>








    



    <script>
        function confirmDelete(url) {
                if (confirm("Are you sure you want to delete this product?")) {
                    window.location.href = url;
                    return true;
                } else {
                    return false;
                }
                        }

        function checkOption(event) { 
            var btnId = event.target.id[event.target.id.length - 1];
            var addButton = document.getElementById("btn_" + btnId);
            addButton.disabled = false;       
        }

    </script>




    <script>// Update the selected amount display and hidden input value
        const rangeInput = document.getElementById('customRange3');
        const selectedAmountDisplay = document.getElementById('selectedAmount');
        const selectedAmountInput = document.getElementById('selectedAmountInput');

        rangeInput.addEventListener('input', function () {
            const selectedAmount = this.value;
            selectedAmountDisplay.textContent = 'Price range: 1$ - $' + selectedAmount;
            selectedAmountInput.value = selectedAmount;
        });
    </script>




</body>
